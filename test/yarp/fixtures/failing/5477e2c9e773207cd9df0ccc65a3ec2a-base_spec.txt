require "spec_helper"
require "fileutils"

RSpec.describe Asciidoctor::BSI do
  before(:all) do
    @blank_hdr = blank_hdr_gen
  end

  it "has a version number" do
    expect(Metanorma::BSI::VERSION).not_to be nil
  end

  it "processes a blank document" do
    expect(xmlpp(strip_guid(Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)))).to be_equivalent_to xmlpp(<<~"OUTPUT")
    #{ASCIIDOC_BLANK_HDR}
    INPUT
    #{@blank_hdr}
<sections/>
</bsi-standard>
    OUTPUT
  end

  it "converts a blank document" do
    FileUtils.rm_f "test.doc"
    FileUtils.rm_f "test.html"
    FileUtils.rm_f "test.pdf"
    expect(xmlpp(strip_guid(Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)))).to be_equivalent_to xmlpp(<<~"OUTPUT")
      = Document title
      Author
      :docfile: test.adoc
      :novalid:
      :no-isobib:
    INPUT
      #{@blank_hdr}
      <sections/>
      </bsi-standard>
    OUTPUT
    expect(File.exist?("test.pdf")).to be true
    expect(File.exist?("test.html")).to be true
    expect(File.exist?("test.doc")).to be true
    expect(File.exist?("htmlstyle.css")).to be false
  end

  it "processes default metadata" do
    expect(xmlpp(strip_guid(Nokogiri::XML(Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)).at("//xmlns:bibdata").to_xml))).to be_equivalent_to xmlpp(<<~"OUTPUT")
      = Document title
      Author
      :docfile: test.adoc
      :nodoc:
      :novalid:
      :no-isobib:
      :docnumber: 1000
      :partnumber: 1
      :edition: 2
      :revdate: 2000-01-01
      :draft: 0.3.4
      :technical-committee: TC
      :technical-committee-number: 1
      :technical-committee-type: A
      :subcommittee: SC
      :subcommittee-number: 2
      :subcommittee-type: B
      :workgroup: WG
      :workgroup-number: 3
      :workgroup-type: C
      :technical-committee_2: TC1
      :technical-committee-number_2: 11
      :technical-committee-type_2: A1
      :subcommittee_2: SC1
      :subcommittee-number_2: 21
      :subcommittee-type_2: B1
      :workgroup_2: WG1
      :workgroup-number_2: 31
      :workgroup-type_2: C1
      :secretariat: SECRETARIAT
      :docstage: 10
      :docsubstage: 20
      :iteration: 3
      :language: en
      :title-intro-en: Introduction
      :title-main-en: Main Title -- Title
      :title-part-en: Title Part
      :title-intro-fr: Introduction Française
      :title-main-fr: Titre Principal
      :title-part-fr: Part du Titre
      :library-ics: 1,2,3
      :accessibility-color-inside: true
      :price-code: XC
      :cen-processing: true
      :secretary: Fred Nerk
      :interest-to-committees: TC 6121, SC 12
      :obsoletes: ABC; DEF
    INPUT
       <bibdata type="standard">
   <title language="en" format="text/plain" type="main">Introduction — Main Title — Title — Title Part</title>
   <title language="en" format="text/plain" type="title-intro">Introduction</title>
   <title language="en" format="text/plain" type="title-main">Main Title — Title</title>
   <title language="en" format="text/plain" type="title-part">Title Part</title>
   <title language="fr" format="text/plain" type="main">Introduction Française — Titre Principal — Part du Titre</title>
   <title language="fr" format="text/plain" type="title-intro">Introduction Française</title>
   <title language="fr" format="text/plain" type="title-main">Titre Principal</title>
   <title language="fr" format="text/plain" type="title-part">Part du Titre</title>
         <docidentifier type="BS">BS/PreNP 1000-1</docidentifier>
<docnumber>1000</docnumber>
         <contributor>
           <role type="author"/>
           <organization>
             <name>British Standards Institute</name>
             <abbreviation>BSI</abbreviation>
           </organization>
         </contributor>
         <contributor>
           <role type="publisher"/>
           <organization>
             <name>British Standards Institute</name>
             <abbreviation>BSI</abbreviation>
           </organization>
         </contributor>
         <edition>2</edition>
<version>
         <revision-date>2000-01-01</revision-date>
         <draft>0.3.4</draft>
       </version>
         <language>en</language>
         <script>Latn</script>
         <status>
           <stage abbreviation="NP">10</stage>
           <substage>20</substage>
           <iteration>3</iteration>
         </status>
         <copyright>
           <from>#{Date.today.year}</from>
           <owner>
             <organization>
             <name>British Standards Institute</name>
             <abbreviation>BSI</abbreviation>
             </organization>
           </owner>
         </copyright>
         <relation type='obsoletes'>
  <bibitem>
    <title>--</title>
    <docidentifier>ABC</docidentifier>
  </bibitem>
</relation>
<relation type='obsoletes'>
  <bibitem>
    <title>--</title>
    <docidentifier>DEF</docidentifier>
  </bibitem>
</relation>
         <ext>
         <doctype>article</doctype>
         <editorialgroup>
           <technical-committee number="1" type="A">TC</technical-committee>
           <technical-committee number="11" type="A1">TC1</technical-committee>
           <subcommittee number="2" type="B">SC</subcommittee>
           <subcommittee number="21" type="B1">SC1</subcommittee>
           <workgroup number="3" type="C">WG</workgroup>
           <workgroup number="31" type="C1">WG1</workgroup>
           <secretariat>SECRETARIAT</secretariat>
         </editorialgroup>
         <ics>
  <code>1</code>
</ics>
<ics>
  <code>2</code>
</ics>
<ics>
  <code>3</code>
</ics>
<structuredidentifier>
  <project-number part="1">BS 1000</project-number>
</structuredidentifier>
<stagename>New work item proposal</stagename>
       </ext>
       </bibdata>
    OUTPUT
  end


  it "processes complex metadata" do
    expect(xmlpp(strip_guid(Nokogiri::XML(Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)).at("//xmlns:bibdata").to_xml))).to be_equivalent_to xmlpp(<<~"OUTPUT")
      = Document title
      Author
      :docfile: test.adoc
      :nodoc:
      :novalid:
      :no-isobib:
      :docnumber: 1000
      :partnumber: 1-1
      :tc-docnumber: 2000
      :language: el
      :script: Grek
      :publisher: BSI;IETF;ISO
      :copyright-year: 2001
      :docstage: 50
      :doctype: technical-specification
      :function: emc
      :horizontal: true
    INPUT
       <bibdata type="standard">
         <docidentifier type="BS">BS/IETF/ISO/FDTS TS 1000-1-1</docidentifier>
         <docidentifier type="iso-tc">2000</docidentifier>
         <docnumber>1000</docnumber>
         <contributor>
           <role type="author"/>
           <organization>
             <name>British Standards Institute</name>
             <abbreviation>BSI</abbreviation>
           </organization>
         </contributor>
         <contributor>
           <role type="author"/>
           <organization>
             <name>IETF</name>
           </organization>
         </contributor>
         <contributor>
           <role type="author"/>
           <organization>
             <name>International Organization for Standardization</name>
             <abbreviation>ISO</abbreviation>
           </organization>
         </contributor>
         <contributor>
           <role type="publisher"/>
           <organization>
             <name>British Standards Institute</name>
             <abbreviation>BSI</abbreviation>
           </organization>
         </contributor>
         <contributor>
           <role type="publisher"/>
           <organization>
             <name>IETF</name>
           </organization>
         </contributor>
         <contributor>
           <role type="publisher"/>
           <organization>
             <name>International Organization for Standardization</name>
             <abbreviation>ISO</abbreviation>
           </organization>
         </contributor>
         <language>el</language>
         <script>Grek</script>
         <status>
           <stage abbreviation="FDTS TS">50</stage>
           <substage>00</substage>
         </status>
         <copyright>
           <from>2001</from>
           <owner>
             <organization>
               <name>British Standards Institute</name>
               <abbreviation>BSI</abbreviation>
             </organization>
           </owner>
         </copyright>
         <copyright>
           <from>2001</from>
           <owner>
             <organization>
               <name>IETF</name>
             </organization>
           </owner>
         </copyright>
         <copyright>
           <from>2001</from>
           <owner>
             <organization>
               <name>International Organization for Standardization</name>
               <abbreviation>ISO</abbreviation>
             </organization>
           </owner>
         </copyright>
         <ext>
         <doctype>technical-specification</doctype>
         <editorialgroup>
           <technical-committee/>
           <subcommittee/>
           <workgroup/>
         </editorialgroup>
         <structuredidentifier>
           <project-number part="1" subpart="1">BS/IETF/ISO 1000</project-number>
         </structuredidentifier>
         <stagename>Final draft</stagename>
         </ext>
       </bibdata>
    OUTPUT
  end

  it "processes adoption of ISO standards" do
    VCR.use_cassette "iso-639" do
    expect(xmlpp(strip_guid(Nokogiri::XML(Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)).at("//xmlns:bibdata").to_xml))).to be_equivalent_to xmlpp(<<~"OUTPUT")
      = Document title
      Author
      :docfile: test.adoc
      :docnumber: ISO 639
      :partnumber: 2
      :nodoc:
      :novalid:
      :adopted-from: ISO 639-2
      :copyright-year: 2001
    INPUT
    <bibdata type='standard'>
  <docidentifier type='BS'>BS ISO 639-2:2001</docidentifier>
  <docnumber>ISO 639</docnumber>
  <contributor>
    <role type='author'/>
    <organization>
      <name>British Standards Institute</name>
      <abbreviation>BSI</abbreviation>
    </organization>
  </contributor>
  <contributor>
    <role type='publisher'/>
    <organization>
      <name>British Standards Institute</name>
      <abbreviation>BSI</abbreviation>
    </organization>
  </contributor>
  <language>en</language>
  <script>Latn</script>
  <status>
    <stage abbreviation='IS'>60</stage>
    <substage>60</substage>
  </status>
  <copyright>
    <from>2001</from>
    <owner>
      <organization>
        <name>British Standards Institute</name>
        <abbreviation>BSI</abbreviation>
      </organization>
    </owner>
  </copyright>
  <relation type='adoptedFrom'>
    <bibitem type='standard'>
      <fetched>2021-04-25</fetched>
      <title type='title-main' format='text/plain' language='en' script='Latn'>Codes for the representation of names of languages</title>
      <title type='title-part' format='text/plain' language='en' script='Latn'>Part 2: Alpha-3 code</title>
      <title type='main' format='text/plain' language='en' script='Latn'>
        Codes for the representation of names of
        languages&#8201;&#8212;&#8201;Part 2: Alpha-3 code
      </title>
      <title type='title-main' format='text/plain' language='fr' script='Latn'>Codes pour la repr&#233;sentation des noms de langue</title>
      <title type='title-part' format='text/plain' language='fr' script='Latn'>Partie 2: Code alpha-3</title>
      <title type='main' format='text/plain' language='fr' script='Latn'>
        Codes pour la repr&#233;sentation des noms de
        langue&#8201;&#8212;&#8201;Partie 2: Code alpha-3
      </title>
      <uri type='src'>https://www.iso.org/standard/4767.html</uri>
      <uri type='obp'>https://www.iso.org/obp/ui/#!iso:std:4767:en</uri>
      <uri type='rss'>https://www.iso.org/contents/data/standard/00/47/4767.detail.rss</uri>
      <docidentifier type='ISO'>ISO 639-2</docidentifier>
      <docidentifier type='URN'>urn:iso:std:iso:639:-2:stage-90.20:ed-1:en,fr</docidentifier>
      <docnumber>639</docnumber>
      <contributor>
        <role type='publisher'/>
        <organization>
          <name>International Organization for Standardization</name>
          <abbreviation>ISO</abbreviation>
          <uri>www.iso.org</uri>
        </organization>
      </contributor>
      <edition>1</edition>
      <language>en</language>
      <language>fr</language>
      <script>Latn</script>
      <status>
        <stage>90</stage>
        <substage>20</substage>
      </status>
      <copyright>
        <from>1998</from>
        <owner>
          <organization>
            <name>ISO</name>
          </organization>
        </owner>
      </copyright>
      <relation type='instance'>
        <bibitem type='standard'>
          <fetched>2021-04-25</fetched>
          <title type='title-main' format='text/plain' language='en' script='Latn'>Codes for the representation of names of languages</title>
          <title type='title-part' format='text/plain' language='en' script='Latn'>Part 2: Alpha-3 code</title>
          <title type='main' format='text/plain' language='en' script='Latn'>
            Codes for the representation of names of
            languages&#8201;&#8212;&#8201;Part 2: Alpha-3 code
          </title>
          <title type='title-main' format='text/plain' language='fr' script='Latn'>Codes pour la repr&#233;sentation des noms de langue</title>
          <title type='title-part' format='text/plain' language='fr' script='Latn'>Partie 2: Code alpha-3</title>
          <title type='main' format='text/plain' language='fr' script='Latn'>
            Codes pour la repr&#233;sentation des noms de
            langue&#8201;&#8212;&#8201;Partie 2: Code alpha-3
          </title>
          <uri type='src'>https://www.iso.org/standard/4767.html</uri>
          <uri type='obp'>https://www.iso.org/obp/ui/#!iso:std:4767:en</uri>
          <uri type='rss'>https://www.iso.org/contents/data/standard/00/47/4767.detail.rss</uri>
          <docidentifier type='ISO'>ISO 639-2:1998</docidentifier>
          <docidentifier type='URN'>urn:iso:std:iso:639:-2:stage-90.20:ed-1:en,fr</docidentifier>
          <docnumber>639</docnumber>
          <date type='published'>
            <on>1998-11</on>
          </date>
          <contributor>
            <role type='publisher'/>
            <organization>
              <name>International Organization for Standardization</name>
              <abbreviation>ISO</abbreviation>
              <uri>www.iso.org</uri>
            </organization>
          </contributor>
          <edition>1</edition>
          <language>en</language>
          <language>fr</language>
          <script>Latn</script>
          <abstract format='text/plain' language='fr' script='Latn'>
             La pr&#233;sente partie de l&#8217;ISO 639 fournit deux jeux de
            codets &#224; trois caract&#232;res pour la repr&#233;sentation des
            noms de langue, l&#8217;un destin&#233; &#224; des applications en
            terminologie, l&#8217;autre destin&#233; &#224; des applications
            bibliographiques. Les deux jeux de codets sont les m&#234;mes,
            except&#233; pour vingt-cinq langues qui ont des codets
            diff&#233;rents &#224; cause du crit&#232;re utilis&#233; pour les
            former . &#192; l&#8217;origine, des codets de langues ont
            &#233;t&#233; cr&#233;&#233;s &#224; l&#8217;usage des
            biblioth&#232;ques, des services documentaires et des &#233;diteurs,
            pour indiquer la langue dans l&#8217;&#233;change
            d&#8217;information, particuli&#232;rement entre des syst&#232;mes
            informatis&#233;s. Ces codets ont &#233;t&#233; utilis&#233;s
            largement &#224; l&#8217;int&#233;rieur de la communaut&#233; des
            biblioth&#232;ques, et ils peuvent &#234;tre adopt&#233;s pour toute
            application qui requiert l&#8217;expression de la langue sous forme
            cod&#233;e, en terminologie ou en lexicographie. Le code alpha-2 a
            &#233;t&#233; cr&#233;&#233; pour un usage pratique pour la plupart
            des grandes langues du monde, langues qui sont les plus souvent
            repr&#233;sent&#233;es dans le corpus de la litt&#233;rature
            mondiale. De nouveaux codets sont cr&#233;&#233;s quand il devient
            &#233;vident qu&#8217;il existe un corpus significatif de
            litt&#233;rature dans une langue particuli&#232;re. Les langages
            cr&#233;&#233;s pour &#234;tre utilis&#233;s exclusivement par des
            machines, comme les langages de programmation, ne sont pas inclus
            dans le pr&#233;sent code.
          </abstract>
          <status>
            <stage>90</stage>
            <substage>20</substage>
          </status>
          <copyright>
            <from>1998</from>
            <owner>
              <organization>
                <name>ISO</name>
              </organization>
            </owner>
          </copyright>
          <place>Geneva</place>
        </bibitem>
      </relation>
      <place>Geneva</place>
    </bibitem>
  </relation>
  <ext>
    <doctype>article</doctype>
    <editorialgroup>
      <technical-committee/>
      <subcommittee/>
      <workgroup/>
    </editorialgroup>
    <structuredidentifier>
      <project-number part='2'>BS ISO 639</project-number>
    </structuredidentifier>
    <stagename>International standard</stagename>
  </ext>
</bibdata>
   OUTPUT
   end
  end

  it "processes boilerplate in English" do
    doc = (strip_guid(Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)))
      = Document title
      Author
      :docfile: test.adoc
      :nodoc:
      :novalid:
      :no-isobib:
      :docnumber: 1000
      :partnumber: 1-1
      :tc-docnumber: 2000
      :language: en
      :script: Latn
      :publisher: IEC,IETF,ISO
      :copyright-year: 2001
    INPUT
    expect(doc).to include "Unless otherwise specified"
    end

    it "defaults substage" do
    expect(xmlpp(strip_guid(Nokogiri::XML(Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)).at("//xmlns:bibdata").to_xml))).to be_equivalent_to xmlpp(<<~"OUTPUT")
      = Document title
      Author
      :docfile: test.adoc
      :nodoc:
      :novalid:
      :no-isobib:
      :docnumber: 1000
      :docstage: 50
    INPUT
<bibdata type="standard">
  <docidentifier type="BS">BS/FDIS 1000</docidentifier>
  <docnumber>1000</docnumber>
  <contributor>
    <role type="author"/>
    <organization>
      <name>British Standards Institute</name>
      <abbreviation>BSI</abbreviation>
    </organization>
  </contributor>
  <contributor>
    <role type="publisher"/>
    <organization>
      <name>British Standards Institute</name>
      <abbreviation>BSI</abbreviation>
    </organization>
  </contributor>

  <language>en</language>
  <script>Latn</script>
  <status>
    <stage abbreviation="FDIS">50</stage>
    <substage>00</substage>
  </status>
  <copyright>
    <from>#{Date.today.year}</from>
    <owner>
      <organization>
        <name>British Standards Institute</name>
        <abbreviation>BSI</abbreviation>
      </organization>
    </owner>
  </copyright>
  <ext>
    <doctype>article</doctype>
    <editorialgroup>
      <technical-committee/>
      <subcommittee/>
      <workgroup/>
    </editorialgroup>
    <structuredidentifier>
      <project-number>BS 1000</project-number>
    </structuredidentifier>
    <stagename>Final draft</stagename>
  </ext>
</bibdata>
OUTPUT
    end

        it "defaults substage for stage 60" do
    expect(xmlpp(strip_guid(Nokogiri::XML(Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)).at("//xmlns:bibdata").to_xml))).to be_equivalent_to xmlpp(<<~"OUTPUT")
      = Document title
      Author
      :docfile: test.adoc
      :nodoc:
      :novalid:
      :no-isobib:
      :docnumber: 1000
      :docstage: 60
    INPUT
<bibdata type="standard">
  <docidentifier type="BS">BS 1000</docidentifier>
  <docnumber>1000</docnumber>
  <contributor>
    <role type="author"/>
    <organization>
      <name>British Standards Institute</name>
      <abbreviation>BSI</abbreviation>
    </organization>
  </contributor>
  <contributor>
    <role type="publisher"/>
    <organization>
      <name>British Standards Institute</name>
      <abbreviation>BSI</abbreviation>
    </organization>
  </contributor>

  <language>en</language>
  <script>Latn</script>
  <status>
  <stage abbreviation='IS'>60</stage>
<substage>60</substage>
  </status>
  <copyright>
    <from>#{Date.today.year}</from>
    <owner>
      <organization>
        <name>British Standards Institute</name>
        <abbreviation>BSI</abbreviation>
      </organization>
    </owner>
  </copyright>
  <ext>
    <doctype>article</doctype>
    <editorialgroup>
      <technical-committee/>
      <subcommittee/>
      <workgroup/>
    </editorialgroup>
    <structuredidentifier>
      <project-number>BS 1000</project-number>
    </structuredidentifier>
    <stagename>International standard</stagename>
  </ext>
</bibdata>
OUTPUT
    end

  it "populates metadata for PRF" do
    expect(xmlpp(strip_guid(Nokogiri::XML(Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)).at("//xmlns:bibdata").to_xml))).to be_equivalent_to xmlpp(<<~"OUTPUT")
      = Document title
      Author
      :docfile: test.adoc
      :nodoc:
      :novalid:
      :no-isobib:
      :docnumber: 1000
      :docstage: 60
      :docsubstage: 00
    INPUT
<bibdata type="standard">
  <docidentifier type="BS">BS 1000</docidentifier>
  <docnumber>1000</docnumber>
  <contributor>
    <role type="author"/>
    <organization>
      <name>British Standards Institute</name>
      <abbreviation>BSI</abbreviation>
    </organization>
  </contributor>
  <contributor>
    <role type="publisher"/>
    <organization>
      <name>British Standards Institute</name>
      <abbreviation>BSI</abbreviation>
    </organization>
  </contributor>

  <language>en</language>
  <script>Latn</script>
  <status>
  <stage abbreviation='PRF'>60</stage>
<substage>00</substage>
  </status>
  <copyright>
    <from>#{Date.today.year}</from>
    <owner>
      <organization>
        <name>British Standards Institute</name>
        <abbreviation>BSI</abbreviation>
      </organization>
    </owner>
  </copyright>
  <ext>
    <doctype>article</doctype>
    <editorialgroup>
      <technical-committee/>
      <subcommittee/>
      <workgroup/>
    </editorialgroup>
    <structuredidentifier>
      <project-number>BS 1000</project-number>
    </structuredidentifier>
    <stagename>Proof</stagename>
  </ext>
</bibdata>
OUTPUT
    end


  it "reads scripts into blank HTML document" do
    FileUtils.rm_f "test.html"
    Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)
      = Document title
      Author
      :docfile: test.adoc
      :novalid:
      :no-isobib:
      :no-pdf:
    INPUT
    html = File.read("test.html", encoding: "utf-8")
    expect(html).to match(%r{<script>})
  end

  it "uses default fonts" do
    FileUtils.rm_f "test.html"
    Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)
      = Document title
      Author
      :docfile: test.adoc
      :novalid:
      :no-isobib:
      :no-pdf:
    INPUT
    html = File.read("test.html", encoding: "utf-8")
    expect(html)
      .to match(%r[\bpre[^{]+\{[^{]+font-family: "Courier New", monospace;]m)
    expect(html)
      .to match(%r[blockquote[^{]+\{[^{]+font-family: "Tahoma", sans-serif;]m)
    expect(html)
      .to match(%r[\.h2Annex[^{]+\{[^{]+font-family: "Tahoma", sans-serif;]m)
  end

  it "uses Chinese fonts" do
    FileUtils.rm_f "test.html"
    Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)
      = Document title
      Author
      :docfile: test.adoc
      :novalid:
      :no-isobib:
      :script: Hans
      :no-pdf:
    INPUT
    html = File.read("test.html", encoding: "utf-8")
    expect(html)
      .to match(%r[\bpre[^{]+\{[^{]+font-family: "Courier New", monospace;]m)
    expect(html)
      .to match(%r[blockquote[^{]+\{[^{]+font-family: "Source Han Sans", serif;]m)
    expect(html)
      .to match(%r[\.h2Annex[^{]+\{[^{]+font-family: "Source Han Sans", sans-serif;]m)
  end

  it "uses specified fonts" do
    FileUtils.rm_f "test.html"
    Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)
      = Document title
      Author
      :docfile: test.adoc
      :novalid:
      :no-isobib:
      :script: Hans
      :body-font: Zapf Chancery
      :header-font: Comic Sans
      :monospace-font: Andale Mono
      :no-pdf:
    INPUT
    html = File.read("test.html", encoding: "utf-8")
    expect(html)
      .to match(%r[\bpre[^{]+\{[^{]+font-family: Andale Mono;]m)
    expect(html)
      .to match(%r[blockquote[^{]+\{[^{]+font-family: Zapf Chancery;]m)
    expect(html)
      .to match(%r[\.h2Annex[^{]+\{[^{]+font-family: Comic Sans;]m)
  end

  it "strips MS-specific CSS" do
    FileUtils.rm_f "test.html"
    FileUtils.rm_f "test.doc"
    Asciidoctor.convert(<<~"INPUT", backend: :bsi, header_footer: true)
      = Document title
      Author
      :docfile: test.adoc
      :novalid:
      :no-isobib:
      :no-pdf:
    INPUT
    word = File.read("test.doc", encoding: "utf-8")
    html = File.read("test.html", encoding: "utf-8")
    expect(word).to match(%r[mso-style-name: "Intro Title";]m)
    expect(html).not_to match(%r[mso-style-name: "Intro Title";]m)
  end


end
